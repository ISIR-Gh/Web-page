---
import { getCollection, render } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Picture } from "astro:assets";

export async function getStaticPaths() {
	const projects = await getCollection("project");
	return projects.map((project) => ({
		params: { slug: project.id },
		props: { project },
	}));
}

const { title,subtitle, summary, target,raised, cover} = Astro.props.project.data;
const { Content } = await render(Astro.props.project);

const meta = {
	title:`Project | ${title}`,
	description:`${summary}`,	
}

function formatCurrencyGHS(amount:number) {
  try {
    return new Intl.NumberFormat("en-GH", {
      style: "currency",
      currency: "GHS",
      maximumFractionDigits: 0,
    }).format(amount);
} catch {
	return `GHÂ¢ ${amount.toLocaleString()}`;
}
}
const pct = Math.min(100, Math.round((raised / target) * 100));

---

<Layout {...meta}>	
	<div class='mt-20'>
    <article class="prose max-w-3xl mx-auto">
      <h1 class='text-5xl px-4'>{title}</h1>
      <Picture src={cover} formats={['avif', 'webp']} alt={title} class='aspect-video'/>
	  <div class="p-4 h-full rounded-b-md">
		{/* Progress bar */}
				<div class="w-full h-3 rounded-full my-3 bg-gray-200" aria-label="funding progress">
					<div
					class="bg-[#0177E3] h-full rounded-full transition-all"
					style={{ width: `${pct}%` }}
					aria-valuemin={0}
					aria-valuemax={100}
					aria-valuenow={pct}
					role="progressbar"
					/>
				</div>
				{/* Target & Raised */}
				<div class="flex gap-3 text-gray-700">
					<div class="flex items-center gap-2 ">
					{/* Target Icon */}
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
						stroke-width={1.5} stroke="currentColor" class="size-5">
						<path stroke-linecap="round" stroke-linejoin="round"
						d="M12 6v12m-3-2.818.879.659c1.171.879 3.07.879 4.242 0 1.172-.879 1.172-2.303 0-3.182C13.536 12.219 12.768 12 12 12c-.725 0-1.45-.22-2.003-.659-1.106-.879-1.106-2.303 0-3.182s2.9-.879 4.006 0l.415.33M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
					</svg>
					<p class="text-sm">
						Target: <span class="font-semibold">{formatCurrencyGHS(target)}</span>
					</p>
					</div>

					<div class="flex items-center gap-2 ">
					{/* Raised Icon */}
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
						stroke-width={1.5} stroke="currentColor" class="size-5">
						<path stroke-linecap="round" stroke-linejoin="round"
						d="M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 0 0 .75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 0 0-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0 1 12 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 0 1-.673-.38m0 0A2.18 2.18 0 0 1 3 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 0 1 3.413-.387m7.5 0V5.25A2.25 2.25 0 0 0 13.5 3h-3a2.25 2.25 0 0 0-2.25 2.25v.894m7.5 0a48.667 48.667 0 0 0-7.5 0M12 12.75h.008v.008H12v-.008Z" />
					</svg>
					<p class="text-sm">
						Raised: <span class="font-semibold">{formatCurrencyGHS(raised)}</span>
						<span class="ml-2 text-gray-500">({pct}%)</span>
					</p>
					</div>
				</div>

			</div>
      <div class='px-4'>
        <Content />
      </div>
    </article>
	</div>
</Layout>
